events {
    worker_connections 1024;
}

http {
    include       mime.types;
    resolver      127.0.0.11 valid=1s;

    # upstreams…
    upstream auth_backend {
        server 127.0.0.1:65535 max_fails=1 fail_timeout=1s;
    }

    server {
        listen                   80;
        client_max_body_size     500K;
        root                     /frontend_data;
        index                    index.html;

        # JSON ERROR PAGES
        error_page 404 = @json_404;
        error_page 405 = @json_405;
        error_page 403 = @json_403;
        error_page 413 = @json_413;
        error_page 500 = @json_500;
        error_page 502 = @json_502;
        error_page 503 = @json_503;
        error_page 504 = @json_504;

        location @json_404 {
            default_type application/json;
            return 404 '{"status":"error","message":"resource not found"}';
        }
        location @json_403 {
            default_type application/json;
            return 403 '{"status":"error","message":"forbidden"}';
        }

        location @json_405 {
            default_type application/json;
            return 405 '{"status":"error","message":"not allowed}';
        }

        location @json_413 {
            default_type application/json;
            return 413 '{"status":"error","message":"request body is too large"}';
        }
        location @json_500 {
            default_type application/json;
            return 500 '{"status":"error","message":"internal server error"}';
        }
        location @json_502 {
            default_type application/json;
            return 502 '{"status":"error","message":"bad gateway"}';
        }
        location @json_503 {
            default_type application/json;
            return 503 '{"status":"error","message":"service unavailable"}';
        }
        location @json_504 {
            default_type application/json;
            return 504 '{"status":"error","message":"gateway timeout"}';
        }

        # 1) Real static assets: JS, CSS, images, etc.
        location ~* \.(js|mjs|css|png|jpe?g|svg|woff2?)$ {
            try_files $uri =404;
            expires 1d;
            add_header Cache-Control "public";
        }

#         # 2) Your existing /static_data directory
#         location /static_data/ {
#             root /;
#             try_files $uri =404;
#         }
        # 2) Your existing /static_data directory
        location ^~ /static_data/ {
            alias /static_data/;
            try_files $uri =404;
            # optional: add_header Cache-Control "public, max-age=86400";
        }

        # 3) Health-check exact match
        location = /health {
            return 200 "Nginx is running";
            add_header Content-Type text/plain;
        }

        # 4) API proxies (only these prefixes)
        location ^~ /api/auth/ {
            set $auth_target http://auth_service:3000;
            rewrite ^/api/auth(.*)$ $1 break;
            proxy_pass $auth_target;
            proxy_connect_timeout 30s;
            proxy_read_timeout    10s;
            proxy_set_header Host               $host;
            proxy_set_header X-Real-IP          $remote_addr;
            proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto  $scheme;
        }

        location ^~ /api/upload/ {
            set $upload_target http://file_upload_service:3000;
            rewrite ^/api/upload(.*)$ $1 break;
            proxy_pass $upload_target;
            proxy_connect_timeout 30s;
            proxy_read_timeout    60s;
            proxy_set_header Host               $host;
            proxy_set_header X-Real-IP          $remote_addr;
            proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto  $scheme;
        }

        location ^~ /api/dash/ {
            set $dash_target http://dashboard_service:3000;
            rewrite ^/api/dash(.*)$ $1 break;
            proxy_pass $dash_target;
            proxy_connect_timeout 30s;
            proxy_read_timeout    10s;
            proxy_set_header Host               $host;
            proxy_set_header X-Real-IP          $remote_addr;
            proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto  $scheme;
        }

        location ^~ /api/friend/ {
            set $friend_target http://friend_service:3000;
            rewrite ^/api/friend(.*)$ $1 break;
            proxy_pass $friend_target;
            proxy_connect_timeout 30s;
            proxy_read_timeout    10s;
            proxy_set_header Host               $host;
            proxy_set_header X-Real-IP          $remote_addr;
            proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto  $scheme;
        }

        location ^~ /api/presence/ {
            set $presence_target http://presence_service:3000;
            rewrite ^/api/presence(.*)$ $1 break;
            proxy_pass $presence_target;
            proxy_connect_timeout 30s;
            proxy_read_timeout   100s;
            proxy_http_version    1.1;
            proxy_set_header      Upgrade $http_upgrade;
            proxy_set_header      Connection "upgrade";
            proxy_set_header      Host               $host;
            proxy_set_header      X-Real-IP          $remote_addr;
            proxy_set_header      X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header      X-Forwarded-Proto  $scheme;
        }

        location ^~ /api/game/ {
            set $game_target http://game_service:3000;
            rewrite ^/api/game(.*)$ $1 break;
            proxy_pass $game_target;
            proxy_connect_timeout 60s;
            proxy_read_timeout   30s;
            proxy_http_version    1.1;
            proxy_set_header      Upgrade $http_upgrade;
            proxy_set_header      Connection "upgrade";
            proxy_set_header      Host               $host;
            proxy_set_header      X-Real-IP          $remote_addr;
            proxy_set_header      X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header      X-Forwarded-Proto  $scheme;
        }

        location ^~ /api/match/ {
            set $match_target http://match_service:3000;
            rewrite ^/api/match(.*)$ $1 break;
            proxy_pass $match_target;
            proxy_connect_timeout 60s;
            proxy_read_timeout   30s;
            proxy_http_version    1.1;
            proxy_set_header      Upgrade $http_upgrade;
            proxy_set_header      Connection "upgrade";
            proxy_set_header      Host               $host;
            proxy_set_header      X-Real-IP          $remote_addr;
            proxy_set_header      X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header      X-Forwarded-Proto  $scheme;
        }

        # 5) SPA fallback — all other paths return index.html
        location / {
            try_files $uri $uri/ /index.html;
        }
    }
}
