on:
  workflow_dispatch
jobs:
  start_transcendence_stack:
    runs-on: ubuntu-latest
    name: Spin containers and test services
    steps:

      - name: Upload repo to the runner
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Install Docker Compose
        uses: ndeloof/install-compose-action@v0.0.1

      - name: Build the stack from docker-compose-dev.yml
        run: docker-compose -f services/docker-compose.dev.yml up -d --build

      - name: Test auth_service (expecting 401)
        run: |
          echo "Waiting for auth_service to return 401..."
      
          for i in {1..30}; do
            # Suppress curl error and return 000 on failure
            status=$(curl -s -o /dev/null -w "%{http_code}" http://localhost/api/auth/user/info || echo "000")
            echo "Attempt $i: Status code = $status"
          
            if [ "$status" = "401" ]; then
              echo "Attempt $i: auth_service is ready."
              exit 0
            fi
      
            sleep 5
          done
      
          echo "auth_service did not respond with 401 in time."
          exit 1

      - name: Test file_upload_service (expecting 401)
        run: |
          echo "Waiting for file_upload_service to return 401..."
          
          for i in {1..30}; do
            # Send POST with dummy data, suppress errors, capture HTTP code
            status=$(curl -s -o /dev/null -w "%{http_code}" -X POST \
              -H "Content-Type: application/json" \
              -d '{"dummy": "data"}' \
              http://localhost/api/upload/avatar || echo "000")
          
            echo "Attempt $i: Status code = $status"
          
            if [ "$status" = "401" ]; then
              echo "Attempt $i: file_upload_service is ready."
              exit 0
            fi
          
            sleep 5
          done
          
          echo "file_upload_service did not respond with 401 in time."
          exit 1


      - name: Test game_service (expecting 401)
        run: |
          echo "Waiting for game_service to return 401..."
          for i in {1..30}; do
            # Suppress curl error and return 000 on failure
            status=$(curl -s -o /dev/null -w "%{http_code}" http://localhost/api/game/games || echo "000")
            echo "Attempt $i: Status code = $status"
          
            if [ "$status" = "401" ]; then
              echo "Attempt $i: game_service is ready."
              exit 0
            fi
          
            sleep 5
          done
          
          echo "game_service did not respond with 401 in time."
          exit 1

      - name: Test match_service (expecting 401)
        run: |
          echo "Waiting for match_service to return 401..."
          for i in {1..30}; do
            # Suppress curl error and return 000 on failure
            status=$(curl -s -o /dev/null -w "%{http_code}" http://localhost/api/match/matches || echo "000")
            echo "Attempt $i: Status code = $status"
          
            if [ "$status" = "401" ]; then
              echo "Attempt $i: match_service is ready."
              exit 0
            fi
          
            sleep 5
          done

          echo "match_service did not respond with 401 in time."
          exit 1

      - name: Shut down app stack
        if: always()
        run: docker-compose -f services/docker-compose.dev.yml down




